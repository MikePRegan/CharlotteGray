2nd piece

Get-ADUser -SearchBase 'OU=LO,DC=lw,DC=com' -SearchScope 1 -Filter * -Properties Name, DisplayName, SAMAccountName, EMailAddress, Office, MemberOf, * | Select Name, SAMAccountName, EMailAddress, Office, @{n='MemberOf'; e= {($_.MemberOf | % { (Get-ADObject $_).Name }) -Join "," }} | Sort-Object -Property Name | FT -A

Get-ADUser Username -Properties * | Select *

(Get-Adobject $_ -Properties *)




List all AD & Computer Objects

It first pulls back a list of all users, then from that finds all of the used properties on each user, then combines this to get a list of all of the properties that your company is using (i.e. for any user), then outputs all of these properties for all users (i.e. even where it's null for a user). It also does the same for computers.

Clear-Host

$SearchBase = 'DC=LW,DC=Com'

$Users_fn = ("C:\Temp\Scripts\AllAdExport_Users_{0:yyyyMMdd_HHmmss}.csv" -f Get-Date))

$Computers_fn = ("C:\Temp\Scripts\AllAdExport_Computers_{0:yyyyMMdd_HHmmss}.csv" -f Get-Date))

"Collecting user info"

$AllUsers = Get-ADUser -Filter {Enabled -EQ $True} -SearchBase $SearchBase -SearchScope SubTree -Properties *

"Collecting user property info"

$AllProperties = $AllUsers | %{ $_.PSObject.Properties | Select Name } | Select -Expand Name -Unique | Sort

"Exporting users"

$AllUsers | Select $AllProperties | Export-CSV $Users_fn -NoTypeInformation

"Collecting computer info"

$AllComputers = Get-ADComputer -Filter {Enabled -EQ $True} -SearchBase $SearchBase -SearchScope SubTree -Properties *

"Collecting computer property info"

$AllProperties = $AllComputers | %{ $_.PSObject.Properties | Select Name } | Select -Expand Name -Unique | sort

"Exporting computers"

$AllComputers | Select $AllProperties | Export-CSV $Computers_fn -NoTypeInformation




1st piece

1)	First thing’s first, import the csv as a variable.  Use this variable for all subsequent tasks.
$Users = Import-CSV Users.csv

2)	How many users are there?
$Users
(ForEach {Get-Mailbox -Identity $_.EMailAddress -ResultSize Unlimited}).Count

3)	What is the total size of all mailboxes?

$Users
(ForEach {Get-Mailbox -Identity $_.EMailAddress -ResultSize Unlimited}).TotalItemSize.Value.ToGB()


4)	How many accounts exist with non-identical EmailAddress/UserPrincipalName? Be mindful of case sensitivity. 

$Users
ForEach {Get-ADUser -Identity $_.UserPrincipalName -Filter * -Properties UserPrincipalName, EmailAddress, CN}

$Output = @()

ForEach ($User in $Users)
{
    $UPN = $User.UserPrincipalName
    $EmailAddress = $User.EmailAddress
    $Name = $User.CN

    if ($UPN -NE $EmailAddress)
    {
        $Output += New-Object -TypeName PSObject -Property @{
                Name = $Name
                UPN = $UPN 
                Email = $EmailAddress
        } | Select-Object Name,UPN,Email 
    }
} 

$Output | Export-Csv list.csv

5)	Same as question 3, but limited only to Site: NYC

$Users
(ForEach {Get-Mailbox -Identity $_.EMailAddress -ResultSize Unlimited | ? {$_.Site -EQ “NYC”}}).TotalItemSize.Value.ToGB()

6)	How many Employees (AccountType: Employee) have mailboxes larger than 10 GB?  (remember MailboxSizeGB is already in GB.)

$Users
ForEach {Get-MailboxStatistics -Identity $_.EMailAddress -ResultSize Unlimited | ? {$_.AccountType -EQ “Employee” -And $_.TotalMailboxSize -GE “10GB”}}

7)	Provide a list of the top 10 users with EmailAddress @domain2.com in Site: NYC by mailbox size, descending.

a.	The boss already knows that they’re @domain2.com; he wants to only know their usernames, that is, the part of the EmailAddress before the “@” symbol.  There is suspicion that IT Admins managing domain2.com are a quirky bunch and are encoding hidden messages in their directory via email addresses.  Parse out these usernames (in the expected order) and place them in a single string, separated by spaces – should look like: “user1 user2 … user10”

$Users
ForEach {Get-MailboxStatistics -Identity $_.EMailAddress -ResultSize Unlimited | ? {$_.Site -EQ “NYC”} | Sort TotalItemSize -Descending | Select-Object DisplayName, TotalItemSize -First 10 | Join-String -Property DisplayName -Separator '  '











8)	Create a new CSV file that summarizes Sites, using the following headers: Site, TotalUserCount, EmployeeCount, ContractorCount, TotalMailboxSizeGB, AverageMailboxSizeGB
a.	Create this CSV file based off of the original Users.csv.  Note that the boss is picky when it comes to formatting – make sure that AverageMailboxSizeGB is formatted to the nearest tenth of a GB (e.g. 50.124124 is formatted as 50.1).  You must use PowerShell to format this because Excel is down for maintenance.

$Users
Get-Mailbox -ResultSize Unlimited | Get-MailboxStatistics | Select DisplayName, StorageLimitStatus, `@{name=”TotalItemSize (MB)”; expression={[math]::Round( `
($_.TotalItemSize.ToString().Split(“(“)[1].Split(” “)[0].Replace(“,”,””)/1GB),1)}}, `
ItemCount | Sort “TotalItemSize (MB)” -Descending | Export-CSV “Users.csv” -NoTypeInformation

